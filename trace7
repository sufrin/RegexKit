starts (abcdefg) 
(abcx) | (ab(cd)(ef))(g)
0:	Start(0)
1:	 =>9 =>2
2:	Start(1)
3:	Lit(a)
4:	Lit(b)
5:	Lit(c)
6:	Lit(x)
7:	End(1)
8:	-> 24
9:	Start(2)
10:	Lit(a)
11:	Lit(b)
12:	Start(3)
13:	Lit(c)
14:	Lit(d)
15:	End(3)
16:	Start(4)
17:	Lit(e)
18:	Lit(f)
19:	End(4)
20:	End(2)
21:	Start(5)
22:	Lit(g)
23:	End(5)
24:	End(0)
25:	Matched(-1)
starts (abcdefg) (abcx) | (ab(cd)(ef))(g) @ ==> 
     =>   [7] -1 0:(0,7) 1:(?,?) 2:(0,6) 3:(2,4) 4:(4,6)  => ["abcdefg", "", "abcdef", "cd", "ef"]
starts (1) 
(\d+)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	End(0)
6:	Matched(-1)
starts (1) (\d+) @ ==> 
     =>   [1] -1 0:(0,1) 1:(0,1)  => ["1", "1"]
starts (122333444455555) 
(\d+)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	End(0)
6:	Matched(-1)
starts (122333444455555) (\d+) @ ==> 
     =>   [15] -1 0:(0,15) 1:(0,15)  => ["122333444455555", "122333444455555"]
starts (122333444455555) 
((\d)+)
0:	Start(0)
1:	Start(1)
2:	Start(2)
3:	\d
4:	End(2)
5:	 =>2 =>6
6:	End(1)
7:	End(0)
8:	Matched(-1)
starts (122333444455555) ((\d)+) @ ==> 
     =>   [15] -1 0:(0,15) 1:(0,15) 2:(14,15)  => ["122333444455555", "122333444455555", "5"]
starts (122 33344445555) 
((\d)+)
0:	Start(0)
1:	Start(1)
2:	Start(2)
3:	\d
4:	End(2)
5:	 =>2 =>6
6:	End(1)
7:	End(0)
8:	Matched(-1)
starts (122 33344445555) ((\d)+) @ ==> 
     =>   [3] -1 0:(0,3) 1:(0,3) 2:(2,3)  => ["122", "122", "2"]
starts (1111111111 22 33344445555) 
(\d+)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	End(0)
6:	Matched(-1)
'1'@0
0: Start(0) (0, '1', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (0, '1', 1) = Schedule(2,0:(0,?) )
        *** C: [2], P: []
2: \d (0, '1', 2) = Next(0:(0,?) )
        *** C: [], P: [3]
'1'@1
3:  =>2 =>4 (1, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (1, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (1, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (1, '1', 5) = Schedule(6,0:(0,1) 1:(0,1) )
        *** C: [6], P: [3]
6: Matched(-1) (1, '1', 6) = Success(-1,0:(0,1) 1:(0,1) )
        *** lastResult was None now Some((-1,0:(0,1) 1:(0,1) ))
        *** result: Some((-1,0:(0,1) 1:(0,1) )) => None
        current: 
        *** C: [], P: [3]
'1'@2
3:  =>2 =>4 (2, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (2, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (2, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (2, '1', 5) = Schedule(6,0:(0,2) 1:(0,2) )
        *** C: [6], P: [3]
6: Matched(-1) (2, '1', 6) = Success(-1,0:(0,2) 1:(0,2) )
        *** lastResult was Some((-1,0:(0,1) 1:(0,1) )) now Some((-1,0:(0,2) 1:(0,2) ))
        *** result: Some((-1,0:(0,2) 1:(0,2) )) => None
        current: 
        *** C: [], P: [3]
'1'@3
3:  =>2 =>4 (3, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (3, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (3, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (3, '1', 5) = Schedule(6,0:(0,3) 1:(0,3) )
        *** C: [6], P: [3]
6: Matched(-1) (3, '1', 6) = Success(-1,0:(0,3) 1:(0,3) )
        *** lastResult was Some((-1,0:(0,2) 1:(0,2) )) now Some((-1,0:(0,3) 1:(0,3) ))
        *** result: Some((-1,0:(0,3) 1:(0,3) )) => None
        current: 
        *** C: [], P: [3]
'1'@4
3:  =>2 =>4 (4, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (4, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (4, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (4, '1', 5) = Schedule(6,0:(0,4) 1:(0,4) )
        *** C: [6], P: [3]
6: Matched(-1) (4, '1', 6) = Success(-1,0:(0,4) 1:(0,4) )
        *** lastResult was Some((-1,0:(0,3) 1:(0,3) )) now Some((-1,0:(0,4) 1:(0,4) ))
        *** result: Some((-1,0:(0,4) 1:(0,4) )) => None
        current: 
        *** C: [], P: [3]
'1'@5
3:  =>2 =>4 (5, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (5, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (5, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (5, '1', 5) = Schedule(6,0:(0,5) 1:(0,5) )
        *** C: [6], P: [3]
6: Matched(-1) (5, '1', 6) = Success(-1,0:(0,5) 1:(0,5) )
        *** lastResult was Some((-1,0:(0,4) 1:(0,4) )) now Some((-1,0:(0,5) 1:(0,5) ))
        *** result: Some((-1,0:(0,5) 1:(0,5) )) => None
        current: 
        *** C: [], P: [3]
'1'@6
3:  =>2 =>4 (6, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (6, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (6, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (6, '1', 5) = Schedule(6,0:(0,6) 1:(0,6) )
        *** C: [6], P: [3]
6: Matched(-1) (6, '1', 6) = Success(-1,0:(0,6) 1:(0,6) )
        *** lastResult was Some((-1,0:(0,5) 1:(0,5) )) now Some((-1,0:(0,6) 1:(0,6) ))
        *** result: Some((-1,0:(0,6) 1:(0,6) )) => None
        current: 
        *** C: [], P: [3]
'1'@7
3:  =>2 =>4 (7, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (7, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (7, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (7, '1', 5) = Schedule(6,0:(0,7) 1:(0,7) )
        *** C: [6], P: [3]
6: Matched(-1) (7, '1', 6) = Success(-1,0:(0,7) 1:(0,7) )
        *** lastResult was Some((-1,0:(0,6) 1:(0,6) )) now Some((-1,0:(0,7) 1:(0,7) ))
        *** result: Some((-1,0:(0,7) 1:(0,7) )) => None
        current: 
        *** C: [], P: [3]
'1'@8
3:  =>2 =>4 (8, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (8, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (8, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (8, '1', 5) = Schedule(6,0:(0,8) 1:(0,8) )
        *** C: [6], P: [3]
6: Matched(-1) (8, '1', 6) = Success(-1,0:(0,8) 1:(0,8) )
        *** lastResult was Some((-1,0:(0,7) 1:(0,7) )) now Some((-1,0:(0,8) 1:(0,8) ))
        *** result: Some((-1,0:(0,8) 1:(0,8) )) => None
        current: 
        *** C: [], P: [3]
'1'@9
3:  =>2 =>4 (9, '1', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (9, '1', 2) = Next(0:(0,?) )
        *** C: [4], P: [3]
4: End(1) (9, '1', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: [3]
5: End(0) (9, '1', 5) = Schedule(6,0:(0,9) 1:(0,9) )
        *** C: [6], P: [3]
6: Matched(-1) (9, '1', 6) = Success(-1,0:(0,9) 1:(0,9) )
        *** lastResult was Some((-1,0:(0,8) 1:(0,8) )) now Some((-1,0:(0,9) 1:(0,9) ))
        *** result: Some((-1,0:(0,9) 1:(0,9) )) => None
        current: 
        *** C: [], P: [3]
' '@10
3:  =>2 =>4 (10, ' ', 3) = ScheduleMany(List(2, 4),0:(0,?) )
        *** C: [2,4], P: []
2: \d (10, ' ', 2) = Stop
        *** C: [4], P: []
4: End(1) (10, ' ', 4) = Schedule(5,0:(0,?) )
        *** C: [5], P: []
5: End(0) (10, ' ', 5) = Schedule(6,0:(0,10) 1:(0,10) )
        *** C: [6], P: []
6: Matched(-1) (10, ' ', 6) = Success(-1,0:(0,10) 1:(0,10) )
        *** lastResult was Some((-1,0:(0,9) 1:(0,9) )) now Some((-1,0:(0,10) 1:(0,10) ))
        *** C: [], P: []
Finally: (result: Some((-1,0:(0,10) 1:(0,10) )), lastResult: Some((-1,0:(0,10) 1:(0,10) ))
2@11
starts (1111111111 22 33344445555) (\d+) @ ==> 
     =>   [10] -1 0:(0,10) 1:(0,10)  => ["1111111111", "1111111111"]
starts (1111111111 22 33344445555) 
\d\d*
0:	Start(0)
1:	\d
2:	 =>3 =>5
3:	\d
4:	-> 2
5:	End(0)
6:	Matched(-1)
'1'@0
0: Start(0) (0, '1', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (0, '1', 1) = Next()
        *** C: [], P: [2]
'1'@1
2:  =>3 =>5 (1, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (1, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (1, '1', 5) = Schedule(6,0:(0,1) )
        *** C: [6], P: [4]
6: Matched(-1) (1, '1', 6) = Success(-1,0:(0,1) )
        *** lastResult was None now Some((-1,0:(0,1) ))
        *** result: Some((-1,0:(0,1) )) => None
        current: 
        *** C: [], P: [4]
'1'@2
4: -> 2 (2, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (2, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (2, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (2, '1', 5) = Schedule(6,0:(0,2) )
        *** C: [6], P: [4]
6: Matched(-1) (2, '1', 6) = Success(-1,0:(0,2) )
        *** lastResult was Some((-1,0:(0,1) )) now Some((-1,0:(0,2) ))
        *** result: Some((-1,0:(0,2) )) => None
        current: 
        *** C: [], P: [4]
'1'@3
4: -> 2 (3, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (3, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (3, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (3, '1', 5) = Schedule(6,0:(0,3) )
        *** C: [6], P: [4]
6: Matched(-1) (3, '1', 6) = Success(-1,0:(0,3) )
        *** lastResult was Some((-1,0:(0,2) )) now Some((-1,0:(0,3) ))
        *** result: Some((-1,0:(0,3) )) => None
        current: 
        *** C: [], P: [4]
'1'@4
4: -> 2 (4, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (4, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (4, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (4, '1', 5) = Schedule(6,0:(0,4) )
        *** C: [6], P: [4]
6: Matched(-1) (4, '1', 6) = Success(-1,0:(0,4) )
        *** lastResult was Some((-1,0:(0,3) )) now Some((-1,0:(0,4) ))
        *** result: Some((-1,0:(0,4) )) => None
        current: 
        *** C: [], P: [4]
'1'@5
4: -> 2 (5, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (5, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (5, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (5, '1', 5) = Schedule(6,0:(0,5) )
        *** C: [6], P: [4]
6: Matched(-1) (5, '1', 6) = Success(-1,0:(0,5) )
        *** lastResult was Some((-1,0:(0,4) )) now Some((-1,0:(0,5) ))
        *** result: Some((-1,0:(0,5) )) => None
        current: 
        *** C: [], P: [4]
'1'@6
4: -> 2 (6, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (6, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (6, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (6, '1', 5) = Schedule(6,0:(0,6) )
        *** C: [6], P: [4]
6: Matched(-1) (6, '1', 6) = Success(-1,0:(0,6) )
        *** lastResult was Some((-1,0:(0,5) )) now Some((-1,0:(0,6) ))
        *** result: Some((-1,0:(0,6) )) => None
        current: 
        *** C: [], P: [4]
'1'@7
4: -> 2 (7, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (7, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (7, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (7, '1', 5) = Schedule(6,0:(0,7) )
        *** C: [6], P: [4]
6: Matched(-1) (7, '1', 6) = Success(-1,0:(0,7) )
        *** lastResult was Some((-1,0:(0,6) )) now Some((-1,0:(0,7) ))
        *** result: Some((-1,0:(0,7) )) => None
        current: 
        *** C: [], P: [4]
'1'@8
4: -> 2 (8, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (8, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (8, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (8, '1', 5) = Schedule(6,0:(0,8) )
        *** C: [6], P: [4]
6: Matched(-1) (8, '1', 6) = Success(-1,0:(0,8) )
        *** lastResult was Some((-1,0:(0,7) )) now Some((-1,0:(0,8) ))
        *** result: Some((-1,0:(0,8) )) => None
        current: 
        *** C: [], P: [4]
'1'@9
4: -> 2 (9, '1', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (9, '1', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (9, '1', 3) = Next()
        *** C: [5], P: [4]
5: End(0) (9, '1', 5) = Schedule(6,0:(0,9) )
        *** C: [6], P: [4]
6: Matched(-1) (9, '1', 6) = Success(-1,0:(0,9) )
        *** lastResult was Some((-1,0:(0,8) )) now Some((-1,0:(0,9) ))
        *** result: Some((-1,0:(0,9) )) => None
        current: 
        *** C: [], P: [4]
' '@10
4: -> 2 (10, ' ', 4) = Schedule(2,)
        *** C: [2], P: []
2:  =>3 =>5 (10, ' ', 2) = ScheduleMany(List(3, 5),)
        *** C: [3,5], P: []
3: \d (10, ' ', 3) = Stop
        *** C: [5], P: []
5: End(0) (10, ' ', 5) = Schedule(6,0:(0,10) )
        *** C: [6], P: []
6: Matched(-1) (10, ' ', 6) = Success(-1,0:(0,10) )
        *** lastResult was Some((-1,0:(0,9) )) now Some((-1,0:(0,10) ))
        *** C: [], P: []
Finally: (result: Some((-1,0:(0,10) )), lastResult: Some((-1,0:(0,10) ))
2@11
starts (1111111111 22 33344445555) \d\d* @ ==> 
     =>   [10] -1 0:(0,10)  => ["1111111111"]
find (abcdefg 1111111111 22 33344445555) 
\d+
0:	Start(0)
1:	\d
2:	 =>1 =>3
3:	End(0)
4:	Matched(-1)
'a'@0
0: Start(0) (0, 'a', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (0, 'a', 1) = Stop
        *** C: [], P: [0]
'b'@1
0: Start(0) (1, 'b', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (1, 'b', 1) = Stop
        *** C: [], P: [0]
'c'@2
0: Start(0) (2, 'c', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (2, 'c', 1) = Stop
        *** C: [], P: [0]
'd'@3
0: Start(0) (3, 'd', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (3, 'd', 1) = Stop
        *** C: [], P: [0]
'e'@4
0: Start(0) (4, 'e', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (4, 'e', 1) = Stop
        *** C: [], P: [0]
'f'@5
0: Start(0) (5, 'f', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (5, 'f', 1) = Stop
        *** C: [], P: [0]
'g'@6
0: Start(0) (6, 'g', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (6, 'g', 1) = Stop
        *** C: [], P: [0]
' '@7
0: Start(0) (7, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (7, ' ', 1) = Stop
        *** C: [], P: [0]
'1'@8
0: Start(0) (8, '1', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (8, '1', 1) = Next()
        *** C: [], P: [2,0]
'1'@9
2:  =>1 =>3 (9, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (9, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (9, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: End(0) (9, '1', 3) = Schedule(4,0:(8,9) )
        *** C: [4], P: [2,0]
4: Matched(-1) (9, '1', 4) = Success(-1,0:(8,9) )
        *** lastResult was None now Some((-1,0:(8,9) ))
        *** C: [], P: [2,0]
Finally: (result: Some((-1,0:(8,9) )), lastResult: Some((-1,0:(8,9) ))
1@10
2:  =>1 =>3 (11, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (11, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (11, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: End(0) (11, '1', 3) = Schedule(4,0:(8,11) )
        *** C: [4], P: [2,0]
4: Matched(-1) (11, '1', 4) = Success(-1,0:(8,11) )
        *** lastResult was Some((-1,0:(8,9) )) now Some((-1,0:(8,11) ))
        *** C: [], P: [2,0]
find (abcdefg 1111111111 22 33344445555) \d+ @ ==> 
     =>   [3] -1 0:(8,11)  => ["111"]
find (abcdefg 1111111111 22 33344445555) 
1+
0:	Start(0)
1:	Lit(1)
2:	 =>1 =>3
3:	End(0)
4:	Matched(-1)
'a'@0
0: Start(0) (0, 'a', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (0, 'a', 1) = Stop
        *** C: [], P: [0]
'b'@1
0: Start(0) (1, 'b', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (1, 'b', 1) = Stop
        *** C: [], P: [0]
'c'@2
0: Start(0) (2, 'c', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (2, 'c', 1) = Stop
        *** C: [], P: [0]
'd'@3
0: Start(0) (3, 'd', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (3, 'd', 1) = Stop
        *** C: [], P: [0]
'e'@4
0: Start(0) (4, 'e', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (4, 'e', 1) = Stop
        *** C: [], P: [0]
'f'@5
0: Start(0) (5, 'f', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (5, 'f', 1) = Stop
        *** C: [], P: [0]
'g'@6
0: Start(0) (6, 'g', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (6, 'g', 1) = Stop
        *** C: [], P: [0]
' '@7
0: Start(0) (7, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (7, ' ', 1) = Stop
        *** C: [], P: [0]
'1'@8
0: Start(0) (8, '1', 0) = Schedule(1,)
        *** C: [1], P: []
1: Lit(1) (8, '1', 1) = Next()
        *** C: [], P: [2,0]
'1'@9
2:  =>1 =>3 (9, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (9, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: Lit(1) (9, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: End(0) (9, '1', 3) = Schedule(4,0:(8,9) )
        *** C: [4], P: [2,0]
4: Matched(-1) (9, '1', 4) = Success(-1,0:(8,9) )
        *** lastResult was None now Some((-1,0:(8,9) ))
        *** C: [], P: [2,0]
Finally: (result: Some((-1,0:(8,9) )), lastResult: Some((-1,0:(8,9) ))
1@10
2:  =>1 =>3 (11, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (11, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: Lit(1) (11, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: End(0) (11, '1', 3) = Schedule(4,0:(8,11) )
        *** C: [4], P: [2,0]
4: Matched(-1) (11, '1', 4) = Success(-1,0:(8,11) )
        *** lastResult was Some((-1,0:(8,9) )) now Some((-1,0:(8,11) ))
        *** C: [], P: [2,0]
find (abcdefg 1111111111 22 33344445555) 1+ @ ==> 
     =>   [3] -1 0:(8,11)  => ["111"]
find (abcdefg 1111111111 22 33344445555) 
\d+(\D | $)
0:	Start(0)
1:	\d
2:	 =>1 =>3
3:	Start(1)
4:	 =>7 =>5
5:	\D
6:	-> 8
7:	AtEnd
8:	End(1)
9:	End(0)
10:	Matched(-1)
'a'@0
0: Start(0) (0, 'a', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (0, 'a', 1) = Stop
        *** C: [], P: [0]
'b'@1
0: Start(0) (1, 'b', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (1, 'b', 1) = Stop
        *** C: [], P: [0]
'c'@2
0: Start(0) (2, 'c', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (2, 'c', 1) = Stop
        *** C: [], P: [0]
'd'@3
0: Start(0) (3, 'd', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (3, 'd', 1) = Stop
        *** C: [], P: [0]
'e'@4
0: Start(0) (4, 'e', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (4, 'e', 1) = Stop
        *** C: [], P: [0]
'f'@5
0: Start(0) (5, 'f', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (5, 'f', 1) = Stop
        *** C: [], P: [0]
'g'@6
0: Start(0) (6, 'g', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (6, 'g', 1) = Stop
        *** C: [], P: [0]
' '@7
0: Start(0) (7, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (7, ' ', 1) = Stop
        *** C: [], P: [0]
'1'@8
0: Start(0) (8, '1', 0) = Schedule(1,)
        *** C: [1], P: []
1: \d (8, '1', 1) = Next()
        *** C: [], P: [2,0]
'1'@9
2:  =>1 =>3 (9, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (9, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (9, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (9, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (9, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (9, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (9, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@10
2:  =>1 =>3 (10, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (10, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (10, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (10, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (10, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (10, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (10, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@11
2:  =>1 =>3 (11, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (11, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (11, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (11, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (11, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (11, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (11, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@12
2:  =>1 =>3 (12, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (12, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (12, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (12, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (12, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (12, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (12, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@13
2:  =>1 =>3 (13, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (13, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (13, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (13, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (13, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (13, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (13, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@14
2:  =>1 =>3 (14, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (14, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (14, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (14, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (14, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (14, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (14, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@15
2:  =>1 =>3 (15, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (15, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (15, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (15, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (15, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (15, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (15, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@16
2:  =>1 =>3 (16, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (16, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (16, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (16, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (16, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (16, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (16, '1', 5) = Stop
        *** C: [], P: [2,0]
'1'@17
2:  =>1 =>3 (17, '1', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (17, '1', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (17, '1', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (17, '1', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (17, '1', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (17, '1', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (17, '1', 5) = Stop
        *** C: [], P: [2,0]
' '@18
2:  =>1 =>3 (18, ' ', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (18, ' ', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (18, ' ', 1) = Stop
        *** C: [3], P: [0]
3: Start(1) (18, ' ', 3) = Schedule(4,0:(8,?) )
        *** C: [4], P: [0]
4:  =>7 =>5 (18, ' ', 4) = ScheduleMany(List(7, 5),0:(8,?) )
        *** C: [7,5], P: [0]
7: AtEnd (18, ' ', 7) = Stop
        *** C: [5], P: [0]
5: \D (18, ' ', 5) = Next(0:(8,?) )
        *** C: [], P: [0,6]
'2'@19
0: Start(0) (19, '2', 0) = Schedule(1,)
        *** C: [6,1], P: []
6: -> 8 (19, '2', 6) = Schedule(8,0:(8,?) )
        *** C: [1,8], P: []
1: \d (19, '2', 1) = Next()
        *** C: [8], P: [2,0]
8: End(1) (19, '2', 8) = Schedule(9,0:(8,?) )
        *** C: [9], P: [2,0]
9: End(0) (19, '2', 9) = Schedule(10,0:(8,19) 1:(18,19) )
        *** C: [10], P: [2,0]
10: Matched(-1) (19, '2', 10) = Success(-1,0:(8,19) 1:(18,19) )
        *** lastResult was None now Some((-1,0:(8,19) 1:(18,19) ))
        *** C: [], P: [2,0]
Finally: (result: Some((-1,0:(8,19) 1:(18,19) )), lastResult: Some((-1,0:(8,19) 1:(18,19) ))
2@20
2:  =>1 =>3 (21, '2', 2) = ScheduleMany(List(1, 3),)
        *** C: [0,1,3], P: []
0: Start(0) (21, '2', 0) = Schedule(1,)
        *** C: [1,3], P: []
1: \d (21, '2', 1) = Next()
        *** C: [3], P: [2,0]
3: Start(1) (21, '2', 3) = Schedule(4,0:(19,?) )
        *** C: [4], P: [2,0]
4:  =>7 =>5 (21, '2', 4) = ScheduleMany(List(7, 5),0:(19,?) )
        *** C: [7,5], P: [2,0]
7: AtEnd (21, '2', 7) = Stop
        *** C: [5], P: [2,0]
5: \D (21, '2', 5) = Stop
        *** C: [], P: [2,0]
find (abcdefg 1111111111 22 33344445555) \d+(\D | $) @ ==> 
     =>   [11] -1 0:(8,19) 1:(18,19)  => ["1111111111 ", " "]
all (abc 1 22 333 4444 55555) 
(\d+)(\D | $)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	Start(2)
6:	 =>9 =>7
7:	\D
8:	-> 10
9:	AtEnd
10:	End(2)
11:	End(0)
12:	Matched(-1)
********
@0     =>   [2] -1 0:(4,6) 1:(4,5) 2:(5,6)  => ["1 ", "1", " "]
********
********
@6     =>   [3] -1 0:(6,9) 1:(6,8) 2:(8,9)  => ["22 ", "22", " "]
********
********
@9     =>   [4] -1 0:(9,13) 1:(9,12) 2:(12,13)  => ["333 ", "333", " "]
********
********
@13     =>   [5] -1 0:(13,18) 1:(13,17) 2:(17,18)  => ["4444 ", "4444", " "]
********
********
@18     =>   [5] -1 0:(18,23) 1:(18,23) 2:(23,23)  => ["55555", "55555", ""]
********
all (abc 1 22 333 4444 55555) 
(\d+)(\D | $)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	Start(2)
6:	 =>9 =>7
7:	\D
8:	-> 10
9:	AtEnd
10:	End(2)
11:	End(0)
12:	Matched(-1)
********
@0     =>   [2] -1 0:(4,6) 1:(4,5) 2:(5,6)  => ["1 ", "1", " "]
********
********
@6     =>   [3] -1 0:(6,9) 1:(6,8) 2:(8,9)  => ["22 ", "22", " "]
********
********
@9     =>   [4] -1 0:(9,13) 1:(9,12) 2:(12,13)  => ["333 ", "333", " "]
********
********
@13     =>   [5] -1 0:(13,18) 1:(13,17) 2:(17,18)  => ["4444 ", "4444", " "]
********
********
@18     =>   [5] -1 0:(18,23) 1:(18,23) 2:(23,23)  => ["55555", "55555", ""]
********
all (abc 5555555 1 22 333 4444 55555 ) 
(\d+)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	End(0)
6:	Matched(-1)
********
@0     =>   [3] -1 0:(4,7) 1:(4,7)  => ["555", "555"]
********
********
@7     =>   [3] -1 0:(7,10) 1:(7,10)  => ["555", "555"]
********
********
@10     =>   [1] -1 0:(10,11) 1:(10,11)  => ["5", "5"]
********
********
@11     =>   [1] -1 0:(12,13) 1:(12,13)  => ["1", "1"]
********
********
@13     =>   [3] -1 0:(14,17) 1:(14,17)  => ["22 ", "22 "]
********
********
@17     =>   [3] -1 0:(17,20) 1:(17,20)  => ["333", "333"]
********
********
@20     =>   [3] -1 0:(21,24) 1:(21,24)  => ["444", "444"]
********
********
@24     =>   [1] -1 0:(24,25) 1:(24,25)  => ["4", "4"]
********
********
@25     =>   [3] -1 0:(26,29) 1:(26,29)  => ["555", "555"]
********
********
@29     =>   [3] -1 0:(29,32) 1:(29,32)  => ["55 ", "55 "]
********
all (abc 1 22 333 4444 55555 ) 
(5+)^5
0:	Start(0)
1:	Start(1)
2:	Lit(5)
3:	 =>2 =>4
4:	End(1)
5:	^5
6:	End(0)
7:	Matched(-1)
********
@0     =>   [6] -1 0:(18,24) 1:(18,23)  => ["55555 ", "55555"]
********
find (abc55555) 
(5+)
0:	Start(0)
1:	Start(1)
2:	Lit(5)
3:	 =>2 =>4
4:	End(1)
5:	End(0)
6:	Matched(-1)
'a'@0
0: Start(0) (0, 'a', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (0, 'a', 1) = Schedule(2,0:(0,?) )
        *** C: [2], P: []
2: Lit(5) (0, 'a', 2) = Stop
        *** C: [], P: [0]
'b'@1
0: Start(0) (1, 'b', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (1, 'b', 1) = Schedule(2,0:(1,?) )
        *** C: [2], P: []
2: Lit(5) (1, 'b', 2) = Stop
        *** C: [], P: [0]
'c'@2
0: Start(0) (2, 'c', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (2, 'c', 1) = Schedule(2,0:(2,?) )
        *** C: [2], P: []
2: Lit(5) (2, 'c', 2) = Stop
        *** C: [], P: [0]
'5'@3
0: Start(0) (3, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (3, '5', 1) = Schedule(2,0:(3,?) )
        *** C: [2], P: []
2: Lit(5) (3, '5', 2) = Next(0:(3,?) )
        *** C: [], P: [3,0]
'5'@4
3:  =>2 =>4 (4, '5', 3) = ScheduleMany(List(2, 4),0:(3,?) )
        *** C: [0,2,4], P: []
0: Start(0) (4, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (4, '5', 2) = Next(0:(3,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (4, '5', 4) = Schedule(5,0:(3,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (4, '5', 1) = Schedule(2,0:(4,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (4, '5', 5) = Schedule(6,0:(3,4) 1:(3,4) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (4, '5', 2) = Next(0:(4,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (4, '5', 6) = Success(-1,0:(3,4) 1:(3,4) )
        *** lastResult was None now Some((-1,0:(3,4) 1:(3,4) ))
        *** C: [], P: [3,0]
Finally: (result: Some((-1,0:(3,4) 1:(3,4) )), lastResult: Some((-1,0:(3,4) 1:(3,4) ))
5@5
3:  =>2 =>4 (6, '5', 3) = ScheduleMany(List(2, 4),0:(3,?) )
        *** C: [0,2,4], P: []
0: Start(0) (6, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (6, '5', 2) = Next(0:(3,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (6, '5', 4) = Schedule(5,0:(3,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (6, '5', 1) = Schedule(2,0:(6,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (6, '5', 5) = Schedule(6,0:(3,6) 1:(3,6) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (6, '5', 2) = Next(0:(6,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (6, '5', 6) = Success(-1,0:(3,6) 1:(3,6) )
        *** lastResult was Some((-1,0:(3,4) 1:(3,4) )) now Some((-1,0:(3,6) 1:(3,6) ))
        *** C: [], P: [3,0]
find (abc55555) (5+) @ ==> 
     =>   [3] -1 0:(3,6) 1:(3,6)  => ["555", "555"]
all (abc 1 22 5555555555 333 4444 55555) 
(5+)
0:	Start(0)
1:	Start(1)
2:	Lit(5)
3:	 =>2 =>4
4:	End(1)
5:	End(0)
6:	Matched(-1)
'a'@0
0: Start(0) (0, 'a', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (0, 'a', 1) = Schedule(2,0:(0,?) )
        *** C: [2], P: []
2: Lit(5) (0, 'a', 2) = Stop
        *** C: [], P: [0]
'b'@1
0: Start(0) (1, 'b', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (1, 'b', 1) = Schedule(2,0:(1,?) )
        *** C: [2], P: []
2: Lit(5) (1, 'b', 2) = Stop
        *** C: [], P: [0]
'c'@2
0: Start(0) (2, 'c', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (2, 'c', 1) = Schedule(2,0:(2,?) )
        *** C: [2], P: []
2: Lit(5) (2, 'c', 2) = Stop
        *** C: [], P: [0]
' '@3
0: Start(0) (3, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (3, ' ', 1) = Schedule(2,0:(3,?) )
        *** C: [2], P: []
2: Lit(5) (3, ' ', 2) = Stop
        *** C: [], P: [0]
'1'@4
0: Start(0) (4, '1', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (4, '1', 1) = Schedule(2,0:(4,?) )
        *** C: [2], P: []
2: Lit(5) (4, '1', 2) = Stop
        *** C: [], P: [0]
' '@5
0: Start(0) (5, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (5, ' ', 1) = Schedule(2,0:(5,?) )
        *** C: [2], P: []
2: Lit(5) (5, ' ', 2) = Stop
        *** C: [], P: [0]
'2'@6
0: Start(0) (6, '2', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (6, '2', 1) = Schedule(2,0:(6,?) )
        *** C: [2], P: []
2: Lit(5) (6, '2', 2) = Stop
        *** C: [], P: [0]
'2'@7
0: Start(0) (7, '2', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (7, '2', 1) = Schedule(2,0:(7,?) )
        *** C: [2], P: []
2: Lit(5) (7, '2', 2) = Stop
        *** C: [], P: [0]
' '@8
0: Start(0) (8, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (8, ' ', 1) = Schedule(2,0:(8,?) )
        *** C: [2], P: []
2: Lit(5) (8, ' ', 2) = Stop
        *** C: [], P: [0]
'5'@9
0: Start(0) (9, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (9, '5', 1) = Schedule(2,0:(9,?) )
        *** C: [2], P: []
2: Lit(5) (9, '5', 2) = Next(0:(9,?) )
        *** C: [], P: [3,0]
'5'@10
3:  =>2 =>4 (10, '5', 3) = ScheduleMany(List(2, 4),0:(9,?) )
        *** C: [0,2,4], P: []
0: Start(0) (10, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (10, '5', 2) = Next(0:(9,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (10, '5', 4) = Schedule(5,0:(9,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (10, '5', 1) = Schedule(2,0:(10,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (10, '5', 5) = Schedule(6,0:(9,10) 1:(9,10) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (10, '5', 2) = Next(0:(10,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (10, '5', 6) = Success(-1,0:(9,10) 1:(9,10) )
        *** lastResult was None now Some((-1,0:(9,10) 1:(9,10) ))
        *** C: [], P: [3,0]
Finally: (result: Some((-1,0:(9,10) 1:(9,10) )), lastResult: Some((-1,0:(9,10) 1:(9,10) ))
5@11
3:  =>2 =>4 (12, '5', 3) = ScheduleMany(List(2, 4),0:(9,?) )
        *** C: [0,2,4], P: []
0: Start(0) (12, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (12, '5', 2) = Next(0:(9,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (12, '5', 4) = Schedule(5,0:(9,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (12, '5', 1) = Schedule(2,0:(12,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (12, '5', 5) = Schedule(6,0:(9,12) 1:(9,12) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (12, '5', 2) = Next(0:(12,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (12, '5', 6) = Success(-1,0:(9,12) 1:(9,12) )
        *** lastResult was Some((-1,0:(9,10) 1:(9,10) )) now Some((-1,0:(9,12) 1:(9,12) ))
        *** C: [], P: [3,0]
********
@0     =>   [3] -1 0:(9,12) 1:(9,12)  => ["555", "555"]
********
'5'@12
0: Start(0) (12, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (12, '5', 1) = Schedule(2,0:(12,?) )
        *** C: [2], P: []
2: Lit(5) (12, '5', 2) = Next(0:(12,?) )
        *** C: [], P: [3,0]
'5'@13
3:  =>2 =>4 (13, '5', 3) = ScheduleMany(List(2, 4),0:(12,?) )
        *** C: [0,2,4], P: []
0: Start(0) (13, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (13, '5', 2) = Next(0:(12,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (13, '5', 4) = Schedule(5,0:(12,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (13, '5', 1) = Schedule(2,0:(13,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (13, '5', 5) = Schedule(6,0:(12,13) 1:(12,13) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (13, '5', 2) = Next(0:(13,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (13, '5', 6) = Success(-1,0:(12,13) 1:(12,13) )
        *** lastResult was None now Some((-1,0:(12,13) 1:(12,13) ))
        *** C: [], P: [3,0]
Finally: (result: Some((-1,0:(12,13) 1:(12,13) )), lastResult: Some((-1,0:(12,13) 1:(12,13) ))
5@14
3:  =>2 =>4 (15, '5', 3) = ScheduleMany(List(2, 4),0:(12,?) )
        *** C: [0,2,4], P: []
0: Start(0) (15, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (15, '5', 2) = Next(0:(12,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (15, '5', 4) = Schedule(5,0:(12,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (15, '5', 1) = Schedule(2,0:(15,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (15, '5', 5) = Schedule(6,0:(12,15) 1:(12,15) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (15, '5', 2) = Next(0:(15,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (15, '5', 6) = Success(-1,0:(12,15) 1:(12,15) )
        *** lastResult was Some((-1,0:(12,13) 1:(12,13) )) now Some((-1,0:(12,15) 1:(12,15) ))
        *** C: [], P: [3,0]
********
@12     =>   [3] -1 0:(12,15) 1:(12,15)  => ["555", "555"]
********
'5'@15
0: Start(0) (15, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (15, '5', 1) = Schedule(2,0:(15,?) )
        *** C: [2], P: []
2: Lit(5) (15, '5', 2) = Next(0:(15,?) )
        *** C: [], P: [3,0]
'5'@16
3:  =>2 =>4 (16, '5', 3) = ScheduleMany(List(2, 4),0:(15,?) )
        *** C: [0,2,4], P: []
0: Start(0) (16, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (16, '5', 2) = Next(0:(15,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (16, '5', 4) = Schedule(5,0:(15,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (16, '5', 1) = Schedule(2,0:(16,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (16, '5', 5) = Schedule(6,0:(15,16) 1:(15,16) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (16, '5', 2) = Next(0:(16,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (16, '5', 6) = Success(-1,0:(15,16) 1:(15,16) )
        *** lastResult was None now Some((-1,0:(15,16) 1:(15,16) ))
        *** C: [], P: [3,0]
Finally: (result: Some((-1,0:(15,16) 1:(15,16) )), lastResult: Some((-1,0:(15,16) 1:(15,16) ))
5@17
3:  =>2 =>4 (18, '5', 3) = ScheduleMany(List(2, 4),0:(15,?) )
        *** C: [0,2,4], P: []
0: Start(0) (18, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (18, '5', 2) = Next(0:(15,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (18, '5', 4) = Schedule(5,0:(15,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (18, '5', 1) = Schedule(2,0:(18,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (18, '5', 5) = Schedule(6,0:(15,18) 1:(15,18) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (18, '5', 2) = Next(0:(18,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (18, '5', 6) = Success(-1,0:(15,18) 1:(15,18) )
        *** lastResult was Some((-1,0:(15,16) 1:(15,16) )) now Some((-1,0:(15,18) 1:(15,18) ))
        *** C: [], P: [3,0]
********
@15     =>   [3] -1 0:(15,18) 1:(15,18)  => ["555", "555"]
********
'5'@18
0: Start(0) (18, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (18, '5', 1) = Schedule(2,0:(18,?) )
        *** C: [2], P: []
2: Lit(5) (18, '5', 2) = Next(0:(18,?) )
        *** C: [], P: [3,0]
' '@19
3:  =>2 =>4 (19, ' ', 3) = ScheduleMany(List(2, 4),0:(18,?) )
        *** C: [0,2,4], P: []
0: Start(0) (19, ' ', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (19, ' ', 2) = Stop
        *** C: [4,1], P: [0]
4: End(1) (19, ' ', 4) = Schedule(5,0:(18,?) )
        *** C: [1,5], P: [0]
1: Start(1) (19, ' ', 1) = Schedule(2,0:(19,?) )
        *** C: [5,2], P: [0]
5: End(0) (19, ' ', 5) = Schedule(6,0:(18,19) 1:(18,19) )
        *** C: [2,6], P: [0]
2: Lit(5) (19, ' ', 2) = Stop
        *** C: [6], P: [0]
6: Matched(-1) (19, ' ', 6) = Success(-1,0:(18,19) 1:(18,19) )
        *** lastResult was None now Some((-1,0:(18,19) 1:(18,19) ))
        *** C: [], P: [0]
Finally: (result: Some((-1,0:(18,19) 1:(18,19) )), lastResult: Some((-1,0:(18,19) 1:(18,19) ))
3@20
0: Start(0) (21, '3', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (21, '3', 1) = Schedule(2,0:(21,?) )
        *** C: [2], P: []
2: Lit(5) (21, '3', 2) = Stop
        *** C: [], P: [0]
********
@18     =>   [1] -1 0:(18,19) 1:(18,19)  => ["5", "5"]
********
' '@19
0: Start(0) (19, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (19, ' ', 1) = Schedule(2,0:(19,?) )
        *** C: [2], P: []
2: Lit(5) (19, ' ', 2) = Stop
        *** C: [], P: [0]
'3'@20
0: Start(0) (20, '3', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (20, '3', 1) = Schedule(2,0:(20,?) )
        *** C: [2], P: []
2: Lit(5) (20, '3', 2) = Stop
        *** C: [], P: [0]
'3'@21
0: Start(0) (21, '3', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (21, '3', 1) = Schedule(2,0:(21,?) )
        *** C: [2], P: []
2: Lit(5) (21, '3', 2) = Stop
        *** C: [], P: [0]
'3'@22
0: Start(0) (22, '3', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (22, '3', 1) = Schedule(2,0:(22,?) )
        *** C: [2], P: []
2: Lit(5) (22, '3', 2) = Stop
        *** C: [], P: [0]
' '@23
0: Start(0) (23, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (23, ' ', 1) = Schedule(2,0:(23,?) )
        *** C: [2], P: []
2: Lit(5) (23, ' ', 2) = Stop
        *** C: [], P: [0]
'4'@24
0: Start(0) (24, '4', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (24, '4', 1) = Schedule(2,0:(24,?) )
        *** C: [2], P: []
2: Lit(5) (24, '4', 2) = Stop
        *** C: [], P: [0]
'4'@25
0: Start(0) (25, '4', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (25, '4', 1) = Schedule(2,0:(25,?) )
        *** C: [2], P: []
2: Lit(5) (25, '4', 2) = Stop
        *** C: [], P: [0]
'4'@26
0: Start(0) (26, '4', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (26, '4', 1) = Schedule(2,0:(26,?) )
        *** C: [2], P: []
2: Lit(5) (26, '4', 2) = Stop
        *** C: [], P: [0]
'4'@27
0: Start(0) (27, '4', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (27, '4', 1) = Schedule(2,0:(27,?) )
        *** C: [2], P: []
2: Lit(5) (27, '4', 2) = Stop
        *** C: [], P: [0]
' '@28
0: Start(0) (28, ' ', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (28, ' ', 1) = Schedule(2,0:(28,?) )
        *** C: [2], P: []
2: Lit(5) (28, ' ', 2) = Stop
        *** C: [], P: [0]
'5'@29
0: Start(0) (29, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (29, '5', 1) = Schedule(2,0:(29,?) )
        *** C: [2], P: []
2: Lit(5) (29, '5', 2) = Next(0:(29,?) )
        *** C: [], P: [3,0]
'5'@30
3:  =>2 =>4 (30, '5', 3) = ScheduleMany(List(2, 4),0:(29,?) )
        *** C: [0,2,4], P: []
0: Start(0) (30, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (30, '5', 2) = Next(0:(29,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (30, '5', 4) = Schedule(5,0:(29,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (30, '5', 1) = Schedule(2,0:(30,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (30, '5', 5) = Schedule(6,0:(29,30) 1:(29,30) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (30, '5', 2) = Next(0:(30,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (30, '5', 6) = Success(-1,0:(29,30) 1:(29,30) )
        *** lastResult was None now Some((-1,0:(29,30) 1:(29,30) ))
        *** C: [], P: [3,0]
Finally: (result: Some((-1,0:(29,30) 1:(29,30) )), lastResult: Some((-1,0:(29,30) 1:(29,30) ))
5@31
3:  =>2 =>4 (32, '5', 3) = ScheduleMany(List(2, 4),0:(29,?) )
        *** C: [0,2,4], P: []
0: Start(0) (32, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (32, '5', 2) = Next(0:(29,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (32, '5', 4) = Schedule(5,0:(29,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (32, '5', 1) = Schedule(2,0:(32,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (32, '5', 5) = Schedule(6,0:(29,32) 1:(29,32) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (32, '5', 2) = Next(0:(32,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (32, '5', 6) = Success(-1,0:(29,32) 1:(29,32) )
        *** lastResult was Some((-1,0:(29,30) 1:(29,30) )) now Some((-1,0:(29,32) 1:(29,32) ))
        *** C: [], P: [3,0]
********
@19     =>   [3] -1 0:(29,32) 1:(29,32)  => ["555", "555"]
********
'5'@32
0: Start(0) (32, '5', 0) = Schedule(1,)
        *** C: [1], P: []
1: Start(1) (32, '5', 1) = Schedule(2,0:(32,?) )
        *** C: [2], P: []
2: Lit(5) (32, '5', 2) = Next(0:(32,?) )
        *** C: [], P: [3,0]
'5'@33
3:  =>2 =>4 (33, '5', 3) = ScheduleMany(List(2, 4),0:(32,?) )
        *** C: [0,2,4], P: []
0: Start(0) (33, '5', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (33, '5', 2) = Next(0:(32,?) )
        *** C: [4,1], P: [3,0]
4: End(1) (33, '5', 4) = Schedule(5,0:(32,?) )
        *** C: [1,5], P: [3,0]
1: Start(1) (33, '5', 1) = Schedule(2,0:(33,?) )
        *** C: [5,2], P: [3,0]
5: End(0) (33, '5', 5) = Schedule(6,0:(32,33) 1:(32,33) )
        *** C: [2,6], P: [3,0]
2: Lit(5) (33, '5', 2) = Next(0:(33,?) )
        *** C: [6], P: [3,0]
6: Matched(-1) (33, '5', 6) = Success(-1,0:(32,33) 1:(32,33) )
        *** lastResult was None now Some((-1,0:(32,33) 1:(32,33) ))
        *** C: [], P: [3,0]
Finally: (result: Some((-1,0:(32,33) 1:(32,33) )), lastResult: Some((-1,0:(32,33) 1:(32,33) ))
3:  =>2 =>4 (34, 'null', 3) = ScheduleMany(List(2, 4),0:(32,?) )
        *** C: [0,2,4], P: []
0: Start(0) (34, 'null', 0) = Schedule(1,)
        *** C: [2,4,1], P: []
2: Lit(5) (34, 'null', 2) = Stop
        *** C: [4,1], P: [0]
4: End(1) (34, 'null', 4) = Schedule(5,0:(32,?) )
        *** C: [1,5], P: [0]
1: Start(1) (34, 'null', 1) = Schedule(2,0:(34,?) )
        *** C: [5,2], P: [0]
5: End(0) (34, 'null', 5) = Schedule(6,0:(32,34) 1:(32,34) )
        *** C: [2,6], P: [0]
2: Lit(5) (34, 'null', 2) = Stop
        *** C: [6], P: [0]
6: Matched(-1) (34, 'null', 6) = Success(-1,0:(32,34) 1:(32,34) )
        *** lastResult was Some((-1,0:(32,33) 1:(32,33) )) now Some((-1,0:(32,34) 1:(32,34) ))
        *** C: [], P: [0]
********
@32     =>   [2] -1 0:(32,34) 1:(32,34)  => ["55", "55"]
********
starts (12233344445555) 
(\d+)(5)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	Start(2)
6:	Lit(5)
7:	End(2)
8:	End(0)
9:	Matched(-1)
starts (12233344445555) (\d+)(5) @ ==> 
     =>   [14] -1 0:(0,14) 1:(0,13) 2:(13,14)  => ["12233344445555", "1223334444555", "5"]
starts (12233344445555) 
(\d+)(55)
0:	Start(0)
1:	Start(1)
2:	\d
3:	 =>2 =>4
4:	End(1)
5:	Start(2)
6:	Lit(5)
7:	Lit(5)
8:	End(2)
9:	End(0)
10:	Matched(-1)
starts (12233344445555) (\d+)(55) @ ==> 
     =>   [14] -1 0:(0,14) 1:(0,12) 2:(12,14)  => ["12233344445555", "122333444455", "55"]
starts (12233344445555) 
((\d)+)(55)
0:	Start(0)
1:	Start(1)
2:	Start(2)
3:	\d
4:	End(2)
5:	 =>2 =>6
6:	End(1)
7:	Start(3)
8:	Lit(5)
9:	Lit(5)
10:	End(3)
11:	End(0)
12:	Matched(-1)
starts (12233344445555) ((\d)+)(55) @ ==> 
     =>   [14] -1 0:(0,14) 1:(0,12) 2:(11,12) 3:(12,14)  => ["12233344445555", "122333444455", "5", "55"]
